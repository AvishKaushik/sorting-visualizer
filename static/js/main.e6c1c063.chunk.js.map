{"version":3,"sources":["logo.svg","SortingAlgorithms/MergeSort.js","SortingAlgorithms/QuickSort.js","SortingAlgorithms/BubbleSort.js","SortingAlgorithms/HeapSort.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MergeSorting","array","anim","length","auxArray","slice","sortingDivisor","mArray","sIdx","eIdx","mIdx","Math","floor","i","j","k","push","performMerging","QuickSorting","pi","pivot","partition","console","log","BubbleSorting","arrlen","low","high","performSorting","maxHeap","left","right","max","HeapSorting","SortingVisualizer","props","state","this","resetArray","min","random","setState","arrayBar","document","getElementsByClassName","bfidx","btidx","boStyle","style","bsStyle","color","setTimeout","backgroundColor","boidx","newHeight","bsidx","newHeight2","height","className","onClick","mergeSort","quickSort","heapSort","bubbleSort","map","value","idx","key","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e6c1c063.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\nfunction MergeSorting(array) {\r\n  const anim=[];\r\n  if(array.length <= 1) return array;\r\n  const auxArray=array.slice();\r\n  sortingDivisor(array,0,array.length -1,auxArray,anim);\r\n  return anim;\r\n}\r\n\r\nfunction sortingDivisor(mArray,sIdx,eIdx,auxArray,anim) {\r\n  if(sIdx===eIdx) return;\r\n  const mIdx=Math.floor((sIdx+eIdx)/2);\r\n  sortingDivisor(auxArray,sIdx,mIdx,mArray,anim);\r\n  sortingDivisor(auxArray,mIdx+1,eIdx,mArray,anim);\r\n  performMerging(mArray,sIdx,mIdx,eIdx,auxArray,anim);\r\n}\r\n\r\nfunction performMerging(mArray,sIdx,mIdx,eIdx,auxArray,anim) {\r\n  let i=sIdx;\r\n  let j=sIdx;\r\n  let k=mIdx+1;\r\n  while(i<=mIdx && k<=eIdx)\r\n  {\r\n    anim.push([i,k]);\r\n    anim.push([i,k]);\r\n    if(auxArray[i]<=auxArray[k])\r\n    {\r\n      anim.push([j,auxArray[i]]);\r\n      mArray[j++]=auxArray[i++];\r\n    }\r\n    else\r\n    {\r\n      anim.push([j,auxArray[k]]);\r\n      mArray[j++]=auxArray[k++];\r\n    }\r\n  }\r\n  while(i<=mIdx)\r\n  {\r\n      anim.push([i,i]);\r\n      anim.push([i,i]);\r\n      anim.push([j,auxArray[i]]);\r\n      mArray[j++]=auxArray[i++];\r\n  }\r\n  while(k<=eIdx)\r\n  {\r\n      anim.push([k,k]);\r\n      anim.push([k,k]);\r\n      anim.push([j,auxArray[k]]);\r\n      mArray[j++]=auxArray[k++];\r\n  }\r\n}\r\n\r\nexport default MergeSorting\r\n","import React from 'react'\r\n\r\nfunction QuickSorting(array) {\r\n  const anim=[];\r\n  if(array.length <= 1) return array;\r\n  sortingDivisor(array,0,array.length -1,anim);\r\n  for(let i=0;i<array.length;++i)\r\n  {\r\n    console.log(array[i]);\r\n  }\r\n  return anim;\r\n}\r\n\r\nfunction sortingDivisor(mArray,sIdx,eIdx,anim) {\r\n  if(sIdx>=eIdx) {\r\n    return;\r\n  }\r\n  const pi = partition(mArray,sIdx,eIdx,anim)\r\n  sortingDivisor(mArray,sIdx,pi-1,anim);\r\n  sortingDivisor(mArray,pi+1,eIdx,anim);\r\n}\r\n\r\nfunction partition(mArray,sIdx,eIdx,anim) {\r\n  let pivot = mArray[eIdx];\r\n  let i = sIdx-1;\r\n  for(let j=sIdx; j<=eIdx-1;j++)\r\n  {\r\n    if(mArray[j] < pivot) {\r\n      i++;\r\n      anim.push([i,j,sIdx,eIdx]);\r\n      anim.push([i,j,sIdx,eIdx]);\r\n      [mArray[i],mArray[j]]=[mArray[j],mArray[i]];\r\n      anim.push([i,mArray[i],j,mArray[j]]);\r\n    }\r\n    else if(i>=0) {\r\n      anim.push([i,j,sIdx,eIdx]);\r\n      anim.push([i,j,sIdx,eIdx]);\r\n      anim.push([i,mArray[i],j,mArray[j]]);\r\n    }\r\n  }\r\n  i++;\r\n  anim.push([i,eIdx,sIdx,eIdx]);\r\n  anim.push([i,eIdx,sIdx,eIdx]);\r\n  [mArray[i],mArray[eIdx]]=[mArray[eIdx],mArray[i]];\r\n  anim.push([i,mArray[i],eIdx,mArray[eIdx]]);\r\n  return i;\r\n}\r\n\r\nexport default QuickSorting\r\n","import React from 'react'\r\n\r\nfunction BubbleSorting(array) {\r\n  const anim=[];\r\n  if(array.length <= 1) return array;\r\n  performSorting(array,0,array.length -1,anim);\r\n  return anim;\r\n}\r\n\r\nfunction performSorting(array,low,high,anim) {\r\n  for(let i=0;i<high;++i)\r\n  {\r\n    for(let j=0;j<high-i;++j)\r\n    {\r\n      anim.push([j,j+1]);\r\n      anim.push([j,j+1]);\r\n      if(array[j]>array[j+1]) {\r\n        [array[j],array[j+1]]=[array[j+1],array[j]];\r\n      }\r\n      anim.push([j,array[j],j+1,array[j+1]]);\r\n    }\r\n  }\r\n}\r\n\r\nexport default BubbleSorting\r\n","import React from 'react'\r\n\r\nlet arrlen;\r\n\r\nfunction HeapSorting(array) {\r\n  const anim=[];\r\n  if(array.length <= 1) return array;\r\n  arrlen = array.length;\r\n  for (let i = Math.floor(arrlen / 2); i >= 0; i -= 1){\r\n       maxHeap(array, i,anim);\r\n  }\r\n  for (let i = arrlen-1; i > 0; i--) {\r\n\r\n        anim.push([0,i]);\r\n        anim.push([0,i]);\r\n        [array[0],array[i]]=[array[i],array[0]]\r\n        anim.push([0,array[0],i,array[i]]);\r\n        arrlen--;\r\n        maxHeap(array, 0,anim)\r\n  }\r\n  return anim;\r\n}\r\n\r\nfunction maxHeap(array,i,anim) {\r\n  const left = 2 * i + 1\r\n  const right = 2 * i + 2\r\n  let max = i\r\n\r\n  if (left < arrlen && array[left] > array[max]) {\r\n    max = left\r\n  }\r\n\r\n  if (right < arrlen && array[right] > array[max])     {\r\n    max = right\r\n  }\r\n\r\n  anim.push([i,max]);\r\n  anim.push([i,max]);\r\n\r\n  if (max != i) {\r\n    [array[i],array[max]]=[array[max],array[i]];\r\n    anim.push([i,array[i],max,array[max]]);\r\n    maxHeap(array, max,anim)\r\n  }\r\n  else {\r\n    anim.push([i,array[i],max,array[max]]);\r\n  }\r\n  return ;\r\n}\r\n\r\nexport default HeapSorting\r\n","import React , {Component} from 'react';\r\nimport './SortingVisualizer.css';\r\nimport MergeSorting from '../SortingAlgorithms/MergeSort.js';\r\nimport QuickSorting from '../SortingAlgorithms/QuickSort.js';\r\nimport BubbleSorting from '../SortingAlgorithms/BubbleSort.js';\r\nimport HeapSorting from '../SortingAlgorithms/HeapSort.js';\r\n\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      array: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  resetArray() {\r\n    const array = [];\r\n    for ( let i=0;i<310;i++) {\r\n      array.push(randomIntFromInterval(5,650));\r\n    }\r\n    this.setState({array});\r\n  }\r\n\r\n  quickSort() {\r\n    const anim = QuickSorting(this.state.array);\r\n    for(let i=0;i<anim.length;i++)\r\n    {\r\n      const arrayBar=document.getElementsByClassName('array-bar');\r\n      if(i % 3 !== 2)\r\n      {\r\n        const [bfidx,btidx,low,high] = anim[i];\r\n        const boStyle = arrayBar[bfidx].style;\r\n        const bsStyle = arrayBar[btidx].style;\r\n        const lbStyle = arrayBar[high].style;\r\n        const color = i % 3 === 0 ? 'red':'cyan';\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n          bsStyle.backgroundColor = color;\r\n        }, i*2);\r\n      }\r\n      else\r\n      {\r\n        const [boidx,newHeight,bsidx,newHeight2] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        setTimeout(() => {\r\n          boStyle.height = `${newHeight}px`;\r\n          bsStyle.height = `${newHeight2}px`;\r\n        }, i*2);\r\n      }\r\n    }\r\n  }\r\n\r\n  heapSort() {\r\n    const anim = HeapSorting(this.state.array);\r\n    for(let i=0;i<anim.length;i++)\r\n    {\r\n      const arrayBar=document.getElementsByClassName('array-bar');\r\n      if(i % 3 !== 2)\r\n      {\r\n        const [boidx,bsidx] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        const color = i % 3 === 0 ? 'red':'cyan';\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n          bsStyle.backgroundColor = color;\r\n        }, i*2);\r\n      }\r\n      else\r\n      {\r\n        const [boidx,newHeight,bsidx,newHeight2] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        setTimeout(() => {\r\n          boStyle.height = `${newHeight}px`;\r\n          bsStyle.height = `${newHeight2}px`;\r\n        }, i*2);\r\n      }\r\n    }\r\n  }\r\n\r\n  mergeSort() {\r\n    const anim = MergeSorting(this.state.array);\r\n    for(let i=0;i<anim.length;i++)\r\n    {\r\n      const arrayBar=document.getElementsByClassName('array-bar');\r\n      if(i % 3 !== 2)\r\n      {\r\n        const [boidx,bsidx] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        const color = i % 3 === 0 ? 'red':'cyan';\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n          bsStyle.backgroundColor = color;\r\n        }, i*2);\r\n      }\r\n      else\r\n      {\r\n        const [boidx,newHeight] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        setTimeout(() => {\r\n          boStyle.height = `${newHeight}px`;\r\n        }, i*2);\r\n      }\r\n    }\r\n  }\r\n\r\n  bubbleSort() {\r\n    const anim = BubbleSorting(this.state.array);\r\n    for(let i=0;i<anim.length;i++)\r\n    {\r\n      const arrayBar=document.getElementsByClassName('array-bar');\r\n      if(i % 3 !== 2)\r\n      {\r\n        const [bfidx,btidx] = anim[i];\r\n        const boStyle = arrayBar[bfidx].style;\r\n        const bsStyle = arrayBar[btidx].style;\r\n        const color = i % 3 === 0 ? 'red':'cyan';\r\n        setTimeout(() => {\r\n          boStyle.backgroundColor = color;\r\n          bsStyle.backgroundColor = color;\r\n        }, i*2);\r\n      }\r\n      else\r\n      {\r\n        const [boidx,newHeight,bsidx,newHeight2] = anim[i];\r\n        const boStyle = arrayBar[boidx].style;\r\n        const bsStyle = arrayBar[bsidx].style;\r\n        setTimeout(() => {\r\n          boStyle.height = `${newHeight}px`;\r\n          bsStyle.height = `${newHeight2}px`;\r\n        }, i*2);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {array} = this.state;\r\n\r\n    return (\r\n      <div className=\"array-container\">\r\n        <button onClick={()=>this.resetArray()}>Generate a new array</button>\r\n        <button onClick={()=>this.mergeSort()}>Merge Sort</button>\r\n        <button onClick={()=>this.quickSort()}>Quick Sort</button>\r\n        <button onClick={()=>this.heapSort()}>Heap Sort</button>\r\n        <button onClick={()=>this.bubbleSort()}>Bubble Sort</button>\r\n        <hr></hr>\r\n        {array.map((value, idx) => (\r\n          <div\r\n            className=\"array-bar\"\r\n            key={idx}\r\n            style={{height: `${value}px`}}></div>\r\n          ))}\r\n        <hr></hr>\r\n      </div>\r\n      );\r\n    }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max-min+1) + min);\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}